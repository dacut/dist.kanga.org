#!/bin/bash -ex

if [[ -r /etc/os-release ]]; then
    . /etc/os-release
elif [[ -r /etc/redhat-release ]]; then
    . /etc/redhat-release
else
    echo "Unsupported distribution." 1>&2;
    exit 1;
fi;

case "$ID" in
    amzn | rhel | fedora | centos )
        yum -y update
        yum -y install binutils gcc git rpm-build rpm-devel rpmdevtools \
            rpmlint rpm-python27
        ;;

    * )
        echo "Unknown ID: $ID" 1>&2;
        exit 1;
esac

metadata=http://169.254.169.254/latest/meta-data
availability_zone=$(curl -s $metadata/placement/availability-zone)
region=$(echo $availability_zone | sed -e 's/[a-z]$//')

# Configure the CloudWatch Logs agent
cat > /etc/cloudwatch-logs.conf <<EOF
[general]
state_file = /var/awslogs/state/agent-state

[cloud-init]
file = /var/log/cloud-init.log
log_group_name = cloud-init
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S

[cloud-init-output]
file = /var/log/cloud-init-output.log
log_group_name = cloud-init-output
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S

[build-log]
file = /home/builder/build.log
log_group_name = build-log
log_stream_name = {instance_id}
datetime_format = %Y-%m-%dT%H:%M:%S.%s
EOF

if [[ -e /var/log/messages ]]; then
    cat >> /etc/cloudwatch-logs.cfg <<EOF
[messages]
file = /var/log/messages
log_group_name = syslog
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S
EOF
fi;

if [[ -e /var/log/syslog ]]; then
    cat >> /etc/cloudwatch-logs.cfg <<EOF
[syslog]
file = /var/log/syslog
log_group_name = syslog
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S
EOF
fi;

if [[ -e /var/log/boot.log ]]; then
    cat >> /etc/cloudwatch-logs.cfg <<EOF
[boot]
file = /var/log/boot.log
log_group_name = syslog
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S
EOF
fi;

if [[ -e /var/log/kern.log ]]; then
    cat >> /etc/cloudwatch-logs.cfg <<EOF
[syslog]
file = /var/log/kern.log
log_group_name = syslog
log_stream_name = {instance_id}
datetime_format = %b %d %H:%M:%S
EOF
fi;

# Install CloudWatch Logs agent
if ! wget -O /tmp/awslogs-agent-setup.py \
    'https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py'; then
    error "Failed to download CloudWatch Logs daemon";
    exit 1;
fi;

chmod +x /tmp/awslogs-agent-setup.py
if ! /tmp/awslogs-agent-setup.py --non-interactive --region=$REGION \
    --configfile=/etc/cloudwatch-logs.conf; then
    error "Failed to configure/start CloudWatch Logs daemon";
    exit 1;
fi;

# Add a "builder" system user/group for building the packages
groupadd --system builder
useradd --system --comment "Package builder" --home /home/builder \
    --gid builder -M --shell /bin/false builder
mkdir /home/builder
chown builder:builder /home/builder

# Clone the Git repo for dist.kanga.org and install the kdist-localbuild
# tool.
git clone https://github.com/dacut/dist.kanga.org.git
cd dist.kanga.org
./setup.py install

# After rebooting, rebuild all packages and update the repository.
cat >> /etc/rc.local <<EOF
su -s /bin/sh - builder -c 'cd /home/builder && kdist-localbuild && kdist-repoupdate'
EOF

# Let the system finish booting, then reboot.
at now + 3 minutes <<EOF
/sbin/reboot
EOF

# The end.
